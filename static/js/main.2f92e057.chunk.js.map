{"version":3,"sources":["components/Header/Header.js","components/Personal/PersonalInfo.js","components/Skills/Skills.js","components/EducationAndExperience/Education.js","components/EducationAndExperience/Experience.js","App.js","index.js"],"names":["Header","props","className","title","PersonalInfo","personalData","field","editing","onChange","e","target","name","value","onInputChange","onblur","validateOnBlur","PrintedField","lastName","email","phone","InputField","htmlFor","type","onBlur","required","React","memo","prevProps","nextProps","Skills","useState","skills","skillList","setSkillList","setValue","input","gridStyle","count","columns","rows","gridTemplateColumns","gridTemplateRows","skillFormatting","length","listItems","map","skill","index","onClick","list","filter","item","currentIndex","onSkillUpdate","handleRemove","toString","onSubmit","preventDefault","placeholder","style","EducationForm","education","institution","degree","graduationDate","handleChange","form","PrintedFieldItems","graduationDateFormatted","replaceAll","Education","id","ExperienceForm","experience","company","tenureStart","tenureEnd","cols","tenureStartFormatted","tenureEndFormatted","Experience","initialPersonal","initialEducation","uuid","initialExperience","Form","edit","setEdit","personalInfo","setPersonalInfo","setSkills","setEducation","setExperience","addAnotherSection","dataset","newEducation","newExperience","isEdit","btnClassname","personal","newEucation","array","key","data-id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f92e057.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      <h1>{props.title}</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Personal.css';\n\nconst PersonalInfo = (props) => {\n  const { personalData, editing } = props;\n  let field = '';\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    props.onInputChange(name, value);\n  };\n\n  const handleValidation = (e) => {\n    props.validateOnBlur(e);\n  };\n\n  if (editing) {\n    field = (\n      <InputField\n        personalData={personalData}\n        onChange={handleChange}\n        onblur={handleValidation}\n      />\n    );\n  } else {\n    field = <PrintedField personalData={personalData} />;\n  }\n\n  return (\n    <div className=\"personal-info section\">\n      <h3>Personal Information</h3>\n      {field}\n    </div>\n  );\n};\n\nconst PrintedField = (props) => {\n  const { personalData } = props;\n\n  return (\n    <div className=\"preview-text\">\n      <div className=\"name\">\n        <p>{personalData.name}</p>\n        <p>{personalData.lastName}</p>\n      </div>\n      <div className=\"contact\">\n        <p>{personalData.email}</p>\n        <p className=\"text-align-right\">{personalData.phone}</p>\n      </div>\n    </div>\n  );\n};\n\nconst InputField = (props) => {\n  const { personalData } = props;\n\n  return (\n    <div className=\"form-wrapper\">\n      <form>\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          type=\"text\"\n          value={personalData.name}\n          name=\"name\"\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          required\n        />\n\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          value={personalData.lastName}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          required\n        />\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={personalData.email}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          required\n        />\n        <label htmlFor=\"phone\">Phone Number</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={personalData.phone}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          required\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default React.memo(PersonalInfo, (prevProps, nextProps) => {\n  return prevProps.personalData === nextProps.personalData &&\n  prevProps.editing === nextProps.editing;\n});\n","import React, { useState } from 'react';\nimport './Skills.css';\n\nconst Skills = (props) => {\n  const [skillList, setSkillList] = useState(props.skills);\n  const [value, setValue] = useState('');\n  const { editing } = props;\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    if (value) {\n      const list = [...skillList, value];\n      setSkillList(list);\n      props.onSkillUpdate(list);\n      setValue('');\n      e.preventDefault();\n    }\n  };\n\n  const handleRemove = (index) => {\n    const list = skillList.filter(\n      (item, currentIndex) => currentIndex !== index\n    );\n    props.onSkillUpdate(list);\n    setSkillList(list);\n  };\n\n  const skillFormatting = (count) => {\n    let columns = 0;\n    let rows = 0;\n\n    if (count % 4 === 0) {\n      columns = 4;\n      rows = count / 4;\n    } else if (count % 3 === 0) {\n      columns = 3;\n      rows = count / 3;\n    } else if (count === 5 || count === 10) {\n      columns = 5;\n      rows = count / 5;\n    } else if (count === 2) {\n      columns = 2;\n      rows = 1;\n    }\n\n    const gridStyle = {\n      gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      gridTemplateRows: `repeat(${rows}, 1fr)`,\n    };\n\n    return gridStyle;\n  };\n\n  let input = '';\n  const gridStyle = skillFormatting(skillList.length);\n\n  const listItems = skillList.map((skill, index) => {\n    return (\n      <li onClick={() => handleRemove(index)} key={skill.toString()}>\n        <span className=\"delete-skill\">{skill}</span>\n      </li>\n    );\n  });\n\n  if (editing) {\n    input = (\n      <form className={'skill-form'} onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"content\"\n            value={value}\n            onChange={handleChange}\n            placeholder=\"Press enter to add a skill\"\n            required\n          ></input>\n        </label>\n      </form>\n    );\n  }\n\n  return (\n    <div className=\"skill-list section\">\n      <h3>Technical Skills and Capalilities</h3>\n      {input}\n      <div>\n        <ul style={gridStyle}>{listItems}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Skills);\n","import React from 'react';\nimport './Education.css';\n\nconst EducationForm = (props) => {\n  const { institution, degree, graduationDate } = props.education;\n  const { index } = props;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const form = {\n      ...props.education,\n      [name]: value,\n    };\n    props.handleChange(index, form);\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <button\n        className=\"button delete-section\"\n        type=\"button\"\n        onClick={() => props.onClick()}\n      >\n        Delete\n      </button>\n      <form>\n        <label htmlFor=\"institution\">Institution</label>\n        <input\n          type=\"text\"\n          name=\"institution\"\n          value={institution}\n          onChange={(e) => handleChange(e)}\n          onBlur={props.onBlur}\n          required\n        />\n        <label htmlFor=\"degree\">Degree</label>\n        <input\n          type=\"text\"\n          name=\"degree\"\n          value={degree}\n          onChange={(e) => handleChange(e)}\n          onBlur={props.onBlur}\n          required\n        />\n        <label htmlFor=\"graduationDate\">Graduation Date</label>\n        <input\n          type=\"date\"\n          name=\"graduationDate\"\n          value={graduationDate}\n          onChange={(e) => handleChange(e)}\n          required\n        />\n      </form>\n      <br />\n    </div>\n  );\n};\n\nconst PrintedFieldItems = (props) => {\n  const { education } = props;\n  const graduationDateFormatted = education.graduationDate\n    ? education.graduationDate.replaceAll('-', '/')\n    : '';\n\n  return (\n    <div className=\"preview-text\">\n      <p className=\"bold\">{education.institution}</p>\n      <div className=\"title-and-date\">\n        <p>{education.degree}</p>\n        <p>{graduationDateFormatted}</p>\n      </div>\n    </div>\n  );\n};\n\nconst Education = (props) => {\n  const { education, editing } = props;\n  let field = '';\n\n  if (editing) {\n    field = education.map((institution, index) => (\n      <EducationForm\n        education={institution}\n        index={index}\n        key={institution.id}\n        onClick={() => props.onClick(index)}\n        handleChange={(index, value) =>\n          props.onInputChange(index, value)\n        }\n      />\n    ));\n  } else {\n    field = education.map((institution) => (\n      <PrintedFieldItems education={institution} />\n    ));\n  }\n\n  return (\n    <div className=\"education section\">\n      <h3>Education</h3>\n      {field}\n    </div>\n  );\n};\n\nexport default React.memo(Education, (prevProps, nextProps) => {\n  return prevProps.education === nextProps.education &&\n  prevProps.editing === nextProps.editing;\n});\n","import React from 'react';\nimport './Education.css';\n\nconst ExperienceForm = (props) => {\n  const {\n    company,\n    title,\n    tenureStart,\n    tenureEnd,\n    experience,\n  } = props.experience;\n  const { index } = props;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const form = {\n      ...props.experience,\n      [name]: value,\n    };\n    props.handleChange(index, form);\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <button\n        className=\"button delete-section\"\n        type=\"button\"\n        onClick={props.onClick}\n      >\n        Delete\n      </button>\n      <form>\n        <label htmlFor=\"company\">Company Name</label>\n        <input\n          type=\"text\"\n          name=\"company\"\n          value={company}\n          onChange={(e) => handleChange(e)}\n          required\n        />\n        <label htmlFor=\"title\">Job Title</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={(e) => handleChange(e)}\n          required\n        />\n\n        <label htmlFor=\"tenureStart\">Start Day</label>\n        <input\n          type=\"date\"\n          name=\"tenureStart\"\n          value={tenureStart}\n          onChange={(e) => handleChange(e)}\n          required\n        />\n\n        <label htmlFor=\"tenureEnd\">End Date</label>\n        <input\n          type=\"date\"\n          name=\"tenureEnd\"\n          value={tenureEnd}\n          onChange={(e) => handleChange(e)}\n          required\n        />\n\n        <label htmlFor=\"experience\">Experience</label>\n        <textarea\n          name=\"experience\"\n          cols=\"30\"\n          rows=\"10\"\n          value={experience}\n          onChange={(e) => handleChange(e)}\n        ></textarea>\n      </form>\n      <br />\n    </div>\n  );\n};\n\nconst PrintedFieldItems = (props) => {\n  const { experience } = props;\n  const tenureStartFormatted = experience.tenureStart.replaceAll('-', '/');\n  const tenureEndFormatted = experience.tenureEnd.replaceAll('-', '/');\n\n  return (\n    <div className=\"preview-text\">\n      <p className=\"bold\">{experience.company}</p>\n      <div className=\"title-and-date\">\n        <p>{experience.title}</p>\n        <p>{tenureStartFormatted + ' - ' + tenureEndFormatted}</p>\n      </div>\n      <pre>{experience.experience}</pre>\n    </div>\n  );\n};\n\nconst Experience = (props) => {\n  const { experience, editing } = props;\n  let field = '';\n\n  if (editing) {\n    field = experience.map((company, index) => (\n      <ExperienceForm\n        key={company.id}\n        experience={company}\n        index={index}\n        onClick={() => props.onClick(index)}\n        onBlur={(e) => props.validateOnBlur(e)}\n        handleChange={(index, value) =>\n          props.onInputChange(index, value)\n        }\n      />\n    ));\n  } else {\n    field = experience.map((company) => (\n      <PrintedFieldItems experience={company} />\n    ));\n  }\n\n  return (\n    <div className=\"experience section\">\n      <h3>Experience</h3>\n      {field}\n    </div>\n  );\n};\n\n// export default Experience;\nexport default React.memo(Experience, (prevProps, nextProps) => {\n  return prevProps.experience === nextProps.experience &&\n  prevProps.editing === nextProps.editing;;\n});\n","import React, { useState } from 'react';\nimport './App.css';\nimport { v4 as uuid } from 'uuid';\nimport Header from './components/Header/Header';\nimport PersonalInfo from './components/Personal/PersonalInfo';\nimport Skills from './components/Skills/Skills';\nimport Education from './components/EducationAndExperience/Education';\nimport Experience from './components/EducationAndExperience/Experience';\n\nconst initialPersonal = {\n  name: '',\n  lastName: '',\n  email: '',\n  phone: '',\n};\n\nconst initialEducation = [\n  {\n    institution: '',\n    degree: '',\n    graduationDate: '',\n    id: uuid(),\n  },\n];\n\nconst initialExperience = [\n  {\n    company: '',\n    title: '',\n    tenureStart: '',\n    tenureEnd: '',\n    id: uuid(),\n  },\n];\n\nconst App = () => {\n  return (\n    <div>\n      <Header title={'Resume Creator'} />\n      <Form />\n    </div>\n  );\n};\n\nconst Form = (props) => {\n  const [edit, setEdit] = useState(true);\n  // const [ errors, setErrors ] = useState({});\n  const [personalInfo, setPersonalInfo] = useState(initialPersonal);\n  const [skills, setSkills] = useState([]);\n  const [education, setEducation] = useState(initialEducation);\n  const [experience, setExperience] = useState(initialExperience);\n\n  const addAnotherSection = (e) => {\n    const { id } = e.target.dataset;\n    if (id === '') return;\n\n    switch (id) {\n      case 'education':\n        const newEducation = [\n          ...education,\n          {\n            company: '',\n            title: '',\n            tenureStart: '',\n            tenureEnd: '',\n            id: uuid(),\n          },\n        ];\n        setEducation(newEducation);\n\n        break;\n      case 'experience':\n        const newExperience = [\n          ...experience,\n          {\n            company: '',\n            title: '',\n            tenureStart: '',\n            tenureEnd: '',\n            id: uuid(),\n          },\n        ];\n        setExperience(newExperience);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const deleteEducation = (index) => {\n    const newEucation = education.filter((institution, currentIndex) => {\n      return currentIndex !== index;\n    });\n    setEducation(newEucation);\n  };\n\n  const deleteExperience = (index) => {\n    const newExperience = experience.filter((company, currentIndex) => {\n      return currentIndex !== index;\n    });\n    setExperience(newExperience);\n  };\n\n  const handlePersonalInfoChange = (name, value) => {\n    const personal = { ...personalInfo, [name]: value };\n    setPersonalInfo(personal);\n  };\n\n  const handleEducationChange = (index, value) => {\n    const array = education.map((key, currentIndex) => {\n      if (currentIndex === index) {\n        return value;\n      }\n      return key;\n    });\n\n    setEducation(array);\n  };\n\n  const handleExperienceChange = (index, value) => {\n    const array = experience.map((key, currentIndex) => {\n      if (currentIndex === index) {\n        return value;\n      }\n      return key;\n    });\n\n    setExperience(array);\n  };\n\n  const handleSkillChange = (value) => {\n    setSkills(value);\n  };\n\n  const isEdit = (value) => {\n    setEdit(value);\n  };\n\n  let btnClassname = 'add-button button';\n\n  if (!edit) {\n    btnClassname += ' viewing';\n  }\n\n  return (\n    <>\n      <div className=\"resume\">\n        <PersonalInfo\n          personalData={personalInfo}\n          onInputChange={handlePersonalInfoChange}\n          // parentKey={'personal'}\n          editing={edit}\n        />\n        <Skills\n          skills={skills}\n          onSkillUpdate={handleSkillChange}\n          editing={edit}\n        />\n        <Education\n          education={education}\n          onClick={deleteEducation}\n          onInputChange={handleEducationChange}\n          editing={edit}\n        />\n        <div>\n          <button\n            className={btnClassname}\n            data-id=\"education\"\n            onClick={addAnotherSection}\n          >\n            Add\n          </button>\n        </div>\n\n        <Experience\n          experience={experience}\n          onClick={deleteExperience}\n          onInputChange={handleExperienceChange}\n          editing={edit}\n        />\n        <div>\n          <button\n            className={btnClassname}\n            data-id=\"experience\"\n            onClick={addAnotherSection}\n          >\n            Add\n          </button>\n        </div>\n\n        <br />\n        <div className=\"footer-buttons\">\n          <button\n            className={edit ? 'button submit' : 'button submit active'}\n            onClick={() => isEdit(false)}\n          >\n            Submit\n          </button>\n          <button\n            className={edit ? 'button edit active' : 'button edit'}\n            onClick={() => isEdit(true)}\n          >\n            Edit\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}