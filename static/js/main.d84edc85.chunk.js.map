{"version":3,"sources":["components/Header/Header.js","components/Personal/PersonalInfo.js","components/Skills/Skills.js","components/EducationAndExperience/Education.js","components/EducationAndExperience/Experience.js","App.js","index.js"],"names":["Header","props","className","title","PersonalInfo","personalData","editing","field","console","log","onChange","e","target","name","value","onInputChange","onblur","validateOnBlur","PrintedField","lastName","email","phone","InputField","htmlFor","type","onBlur","required","React","memo","prevProps","nextProps","Skills","useState","skills","skillList","setSkillList","setValue","input","gridStyle","count","columns","rows","gridTemplateColumns","gridTemplateRows","skillFormatting","length","listItems","map","skill","index","onClick","list","filter","item","currentIndex","onSkillUpdate","handleRemove","toString","onSubmit","preventDefault","placeholder","style","EducationForm","education","institution","degree","graduationDate","handleChange","parentKey","form","PrintedFieldItems","graduationDateFormatted","replaceAll","Education","id","nexProps","ExperienceForm","experience","company","tenureStart","tenureEnd","cols","tenureStartFormatted","tenureEndFormatted","Experience","initialPersonal","initialEducation","uuid","initialExperience","App","edit","setEdit","personalInfo","setPersonalInfo","setSkills","setEducation","setExperience","addAnotherSection","dataset","newEducation","newExperience","handleEducationChange","key","array","isEdit","btnClassname","personal","newEucation","data-id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d84edc85.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      <h1>{props.title}</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Personal.css';\n\nconst PersonalInfo = (props) => {\n  const { personalData, editing } = props;\n  let field = '';\n\n  console.log('rendering...')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    props.onInputChange(name, value);\n  };\n\n  const handleValidation = (e) => {\n    props.validateOnBlur(e);\n  };\n\n  if (editing) {\n    field = (\n      <InputField\n        personalData={personalData}\n        onChange={handleChange}\n        onblur={handleValidation}\n      />\n    );\n  } else {\n    field = <PrintedField personalData={personalData} />;\n  }\n\n  return (\n    <div className=\"personal-info section\">\n      <h3>Personal Information</h3>\n      {field}\n    </div>\n  );\n};\n\nconst PrintedField = (props) => {\n  const { personalData } = props;\n\n  return (\n    <div className=\"preview-text\">\n      <div className=\"name\">\n        <p>{personalData.name}</p>\n        <p>{personalData.lastName}</p>\n      </div>\n      <div className=\"contact\">\n        <p>{personalData.email}</p>\n        <p className=\"text-align-right\">{personalData.phone}</p>\n      </div>\n    </div>\n  );\n};\n\nconst InputField = (props) => {\n  const { personalData } = props;\n\n  return (\n    <div className=\"form-wrapper\">\n      <form>\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          type=\"text\"\n          value={personalData.name}\n          name=\"name\"\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          required\n        />\n\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          value={personalData.lastName}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          required\n        />\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={personalData.email}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          required\n        />\n        <label htmlFor=\"phone\">Phone Number</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={personalData.phone}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          required\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default React.memo(PersonalInfo, (prevProps, nextProps) => {\n  return prevProps.personalData === nextProps.personalData;\n});\n","import React, { useState } from 'react';\nimport './Skills.css';\n\nconst Skills = (props) => {\n  const [skillList, setSkillList] = useState(props.skills);\n  const [value, setValue] = useState('');\n  const { editing } = props;\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    if (value) {\n      const list = [...skillList, value];\n      setSkillList(list);\n      props.onSkillUpdate(list);\n      setValue('');\n      e.preventDefault();\n    }\n  };\n\n  const handleRemove = (index) => {\n    const list = skillList.filter(\n      (item, currentIndex) => currentIndex !== index\n    );\n    props.onSkillUpdate(list);\n    setSkillList(list);\n  };\n\n  const skillFormatting = (count) => {\n    let columns = 0;\n    let rows = 0;\n\n    if (count % 4 === 0) {\n      columns = 4;\n      rows = count / 4;\n    } else if (count % 3 === 0) {\n      columns = 3;\n      rows = count / 3;\n    } else if (count === 5 || count === 10) {\n      columns = 5;\n      rows = count / 5;\n    } else if (count === 2) {\n      columns = 2;\n      rows = 1;\n    }\n\n    const gridStyle = {\n      gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      gridTemplateRows: `repeat(${rows}, 1fr)`,\n    };\n\n    return gridStyle;\n  };\n\n  let input = '';\n  const gridStyle = skillFormatting(skillList.length);\n\n  const listItems = skillList.map((skill, index) => {\n    return (\n      <li onClick={() => handleRemove(index)} key={skill.toString()}>\n        <span className=\"delete-skill\">{skill}</span>\n      </li>\n    );\n  });\n\n  if (editing) {\n    input = (\n      <form className={'skill-form'} onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"content\"\n            value={value}\n            onChange={handleChange}\n            placeholder=\"Press enter to add a skill\"\n            required\n          ></input>\n        </label>\n      </form>\n    );\n  }\n\n  return (\n    <div className=\"skill-list section\">\n      <h3>Technical Skills and Capalilities</h3>\n      {input}\n      <div>\n        <ul style={gridStyle}>{listItems}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Skills);\n","import React from 'react';\nimport './Education.css';\n\nconst EducationForm = (props) => {\n  const { institution, degree, graduationDate } = props.education;\n  const { index, parentKey } = props;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const form = {\n      ...props.education,\n      [name]: value,\n    };\n    props.handleChange(index, form);\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <button\n        className=\"button delete-section\"\n        type=\"button\"\n        onClick={() => props.onClick()}\n      >\n        Delete\n      </button>\n      <form>\n        <label htmlFor=\"institution\">Institution</label>\n        <input\n          type=\"text\"\n          name=\"institution\"\n          value={institution}\n          onChange={(e) => handleChange(e, parentKey)}\n          onBlur={props.onBlur}\n          required\n        />\n        <label htmlFor=\"degree\">Degree</label>\n        <input\n          type=\"text\"\n          name=\"degree\"\n          value={degree}\n          onChange={(e) => handleChange(e, parentKey)}\n          onBlur={props.onBlur}\n          required\n        />\n        <label htmlFor=\"graduationDate\">Graduation Date</label>\n        <input\n          type=\"date\"\n          name=\"graduationDate\"\n          value={graduationDate}\n          onChange={(e) => handleChange(e, parentKey)}\n          required\n        />\n      </form>\n      <br />\n    </div>\n  );\n};\n\nconst PrintedFieldItems = (props) => {\n  const { education } = props;\n  const graduationDateFormatted = education.graduationDate\n    ? education.graduationDate.replaceAll('-', '/')\n    : '';\n\n  return (\n    <div className=\"preview-text\">\n      <p className=\"bold\">{education.institution}</p>\n      <div className=\"title-and-date\">\n        <p>{education.degree}</p>\n        <p>{graduationDateFormatted}</p>\n      </div>\n    </div>\n  );\n};\n\nconst Education = (props) => {\n  const { education, parentKey, editing } = props;\n  let field = '';\n\n  if (editing) {\n    field = education.map((institution, index) => (\n      <EducationForm\n        education={institution}\n        index={index}\n        key={institution.id}\n        onClick={() => props.onClick(index)}\n        handleChange={(index, value) =>\n          props.onInputChange(parentKey, index, value)\n        }\n        parentKey={parentKey}\n      />\n    ));\n  } else {\n    field = education.map((institution) => (\n      <PrintedFieldItems education={institution} />\n    ));\n  }\n\n  return (\n    <div className=\"education section\">\n      <h3>Education</h3>\n      {field}\n    </div>\n  );\n};\n\nexport default React.memo(Education, (prevProps, nexProps) => {\n  return prevProps.education === nexProps.education;\n});\n","import React from 'react';\nimport './Education.css';\n\nconst ExperienceForm = (props) => {\n  const {\n    company,\n    title,\n    tenureStart,\n    tenureEnd,\n    experience,\n  } = props.experience;\n  const { index, parentKey } = props;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const form = {\n      ...props.experience,\n      [name]: value,\n    };\n    console.log(form);\n    props.handleChange(index, form);\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <button\n        className=\"button delete-section\"\n        type=\"button\"\n        onClick={props.onClick}\n      >\n        Delete\n      </button>\n      <form>\n        <label htmlFor=\"company\">Company Name</label>\n        <input\n          type=\"text\"\n          name=\"company\"\n          value={company}\n          onChange={(e) => handleChange(e, parentKey)}\n          required\n        />\n        <label htmlFor=\"title\">Job Title</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={(e) => handleChange(e)}\n          required\n        />\n\n        <label htmlFor=\"tenureStart\">Start Day</label>\n        <input\n          type=\"date\"\n          name=\"tenureStart\"\n          value={tenureStart}\n          onChange={(e) => handleChange(e, parentKey)}\n          required\n        />\n\n        <label htmlFor=\"tenureEnd\">End Date</label>\n        <input\n          type=\"date\"\n          name=\"tenureEnd\"\n          value={tenureEnd}\n          onChange={(e) => handleChange(e, parentKey)}\n          required\n        />\n\n        <label htmlFor=\"experience\">Experience</label>\n        <textarea\n          name=\"experience\"\n          cols=\"30\"\n          rows=\"10\"\n          value={experience}\n          onChange={(e) => handleChange(e, parentKey)}\n        ></textarea>\n      </form>\n      <br />\n    </div>\n  );\n};\n\nconst PrintedFieldItems = (props) => {\n  const { experience } = props;\n  const tenureStartFormatted = experience.tenureStart.replaceAll('-', '/');\n  const tenureEndFormatted = experience.tenureEnd.replaceAll('-', '/');\n\n  return (\n    <div className=\"preview-text\">\n      <p className=\"bold\">{experience.company}</p>\n      <div className=\"title-and-date\">\n        <p>{experience.title}</p>\n        <p>{tenureStartFormatted + ' - ' + tenureEndFormatted}</p>\n      </div>\n      <pre>{experience.experience}</pre>\n    </div>\n  );\n};\n\nconst Experience = (props) => {\n  const { experience, parentKey, editing } = props;\n  let field = '';\n\n  if (editing) {\n    field = experience.map((company, index) => (\n      <ExperienceForm\n        key={company.id}\n        experience={company}\n        index={index}\n        onClick={() => props.onClick(index)}\n        onBlur={(e) => props.validateOnBlur(e)}\n        handleChange={(index, value) =>\n          props.onInputChange(parentKey, index, value)\n        }\n        parentKey={parentKey}\n      />\n    ));\n  } else {\n    field = experience.map((company) => (\n      <PrintedFieldItems experience={company} />\n    ));\n  }\n\n  return (\n    <div className=\"experience section\">\n      <h3>Experience</h3>\n      {field}\n    </div>\n  );\n};\n\nexport default React.memo(Experience, (prevProps, nexProps) => {\n  return prevProps.experience === nexProps.experience;\n});\n","import React, { useState } from 'react';\nimport './App.css';\nimport { v4 as uuid } from 'uuid';\nimport Header from './components/Header/Header';\nimport PersonalInfo from './components/Personal/PersonalInfo';\nimport Skills from './components/Skills/Skills';\nimport Education from './components/EducationAndExperience/Education';\nimport Experience from './components/EducationAndExperience/Experience';\n\nconst initialPersonal = {\n  name: '',\n  lastName: '',\n  email: '',\n  phone: '',\n};\n\nconst initialEducation = [\n  {\n    institution: '',\n    degree: '',\n    graduationDate: '',\n    id: uuid(),\n  },\n];\n\nconst initialExperience = [\n  {\n    company: '',\n    title: '',\n    tenureStart: '',\n    tenureEnd: '',\n    id: uuid(),\n  },\n];\n\nconst App = (props) => {\n  const [edit, setEdit] = useState(true);\n  // const [ errors, setErrors ] = useState({});\n  const [personalInfo, setPersonalInfo] = useState(initialPersonal);\n  const [skills, setSkills] = useState([]);\n  const [education, setEducation] = useState(initialEducation);\n  const [experience, setExperience] = useState(initialExperience);\n\n  const addAnotherSection = (e) => {\n    const { id } = e.target.dataset;\n    if (id === '') return;\n\n    switch (id) {\n      case 'education':\n        const newEducation = [\n          ...education,\n          {\n            company: '',\n            title: '',\n            tenureStart: '',\n            tenureEnd: '',\n            id: uuid(),\n          },\n        ];\n        setEducation(newEducation);\n\n        break;\n      case 'experience':\n        const newExperience = [\n          ...experience,\n          {\n            company: '',\n            title: '',\n            tenureStart: '',\n            tenureEnd: '',\n            id: uuid(),\n          },\n        ];\n        setExperience(newExperience);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const deleteEducation = (index) => {\n    const newEucation = education.filter((institution, currentIndex) => {\n      return currentIndex !== index;\n    });\n    setEducation(newEucation);\n  };\n\n  const deleteExperience = (index) => {\n    const newExperience = experience.filter((company, currentIndex) => {\n      return currentIndex !== index;\n    });\n    setExperience(newExperience);\n  };\n\n  const handlePersonalInfoChange = (name, value) => {\n    const personal = { ...personalInfo, [name]: value };\n    setPersonalInfo(personal);\n  };\n\n  const handleEducationChange = (key, index, value) => {\n    const array = education.map((key, currentIndex) => {\n      if (currentIndex === index) {\n        return value;\n      }\n      return key;\n    });\n\n    setEducation(array);\n  };\n\n  const handleSkillChange = (value) => {\n    setSkills(value);\n  };\n\n  const isEdit = (value) => {\n    setEdit(value);\n  };\n\n  let btnClassname = 'add-button button';\n\n  if (!edit) {\n    btnClassname += ' viewing';\n  }\n\n  return (\n    <div>\n      <Header title={'Resume Creator'} />\n      <div className=\"resume\">\n        <PersonalInfo\n          personalData={personalInfo}\n          onInputChange={handlePersonalInfoChange}\n          // parentKey={'personal'}\n          editing={edit}\n        />\n        <Skills\n          skills={skills}\n          onSkillUpdate={handleSkillChange}\n          editing={edit}\n        />\n        <Education\n          education={education}\n          onClick={deleteEducation}\n          onInputChange={handleEducationChange}\n          parentKey={'education'}\n          editing={edit}\n        />\n        <div>\n          <button\n            className={btnClassname}\n            data-id=\"education\"\n            onClick={addAnotherSection}\n          >\n            Add\n          </button>\n        </div>\n\n        <Experience\n          experience={experience}\n          onClick={deleteExperience}\n          onInputChange={handleEducationChange}\n          parentKey={'experience'}\n          editing={edit}\n        />\n        <div>\n          <button\n            className={btnClassname}\n            data-id=\"experience\"\n            onClick={addAnotherSection}\n          >\n            Add\n          </button>\n        </div>\n\n        <br />\n        <div className=\"footer-buttons\">\n          <button\n            className={edit ? 'button submit' : 'button submit active'}\n            onClick={() => isEdit(false)}\n          >\n            Submit\n          </button>\n          <button\n            className={edit ? 'button edit active' : 'button edit'}\n            onClick={() => isEdit(true)}\n          >\n            Edit\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}